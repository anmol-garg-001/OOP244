Script started on Fri 06 Nov 2020 12:12:51 AM EST
==217058== Memcheck, a memory error detector
==217058== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==217058== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==217058== Command: ws
==217058== 
Test 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
=========================
numbers.txt
3, 6, 12.2, 34.1, 34.56
-------------------------
Total of 5 number(s)
Largest number:  34.56
Smallest number: 3
Average :        17.972
=========================
Add a number to the list: 1000
=========================
*** COPY ***
3, 6, 12.2, 34.1, 34.56, 1000
-------------------------
Total of 6 number(s)
Largest number:  1000
Smallest number: 3
Average :        181.643
=========================
End Test 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

Content of "numbers.txt"
*****************************************************************
3
6
12.2
34.1
34.56
*****************************************************************
Test 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
=========================
numbers.txt
3, 6, 12.2, 34.1, 34.56
-------------------------
Total of 5 number(s)
Largest number:  34.56
Smallest number: 3
Average :        17.972
=========================
=========================
*** COPY ***
3, 6, 12.2, 34.1, 34.56
-------------------------
Total of 5 number(s)
Largest number:  34.56
Smallest number: 3
Average :        17.972
=========================
Empty list
Empty list
=========================
numbers.txt
3, 6, 12.2, 34.1, 34.56, 1000
-------------------------
Total of 6 number(s)
Largest number:  1000
Smallest number: 3
Average :        181.643
=========================
=========================
*** COPY ***
3, 6, 12.2, 34.1, 34.56, 1000
-------------------------
Total of 6 number(s)
Largest number:  1000
Smallest number: 3
Average :        181.643
=========================
=========================
*** COPY ***
3, 6, 12.2, 34.1, 34.56, 1000
-------------------------
Total of 6 number(s)
Largest number:  1000
Smallest number: 3
Average :        181.643
=========================
End Test 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2

Content of "numbers.txt"
*****************************************************************
3
6
12.2
34.1
34.56
1000
*****************************************************************
Test 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3

In this test we use your insertion and extraction operators to do
File IO. This makes sure your implementation is done correctly
using the reference of istream and ostream and NOT cin and cout

End Test 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3

Content of "numbers.txt"
*****************************************************************
-5
3
6
12.2
34.1
34.56
222.1
333.2
1000
*****************************************************************

Content of "add.txt"
*****************************************************************
-5
222.1
333.2
*****************************************************************

Content of "output.txt"
*****************************************************************
=========================
numbers.txt
-5, 3, 6, 12.2, 34.1, 34.56, 222.1, 333.2, 1000
-------------------------
Total of 9 number(s)
Largest number:  1000
Smallest number: -5
Average :        182.24
=========================
*****************************************************************
==217058== 
==217058== HEAP SUMMARY:
==217058==     in use at exit: 0 bytes in 0 blocks
==217058==   total heap usage: 72 allocs, 72 frees, 223,951 bytes allocated
==217058== 
==217058== All heap blocks were freed -- no leaks are possible
==217058== 
==217058== For lists of detected and suppressed errors, rerun with: -s
==217058== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Script done on Fri 06 Nov 2020 12:12:55 AM EST
